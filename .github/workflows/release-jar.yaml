name: Build and Publish jar to GitHub Releases

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JRE 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew shadowJar

      - name: Get tag name
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG_NAME="${{ github.event.inputs.tag_name }}"
          else
            echo "Error: Workflow triggered by unsupported event type: ${{ github.event_name }}"
            exit 1
          fi
          echo "Extracted tag name: $TAG_NAME"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Find and Rename JAR
        run: |
          ORIGINAL_JAR=$(find build/libs -name '*-all.jar' -print -quit)
          if [ -z "$ORIGINAL_JAR" ]; then
            echo "Error: No -all.jar file found in build/libs."
            exit 1
          fi
          NEW_JAR_NAME="aithana_server.jar"
          mv "$ORIGINAL_JAR" "build/libs/$NEW_JAR_NAME"
          echo "Renamed '$ORIGINAL_JAR' to '$NEW_JAR_NAME'"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            ## Release Notes
            
            This release corresponds to tag `${{ steps.get_tag.outputs.tag }}`.
          draft: false
          prerelease: false
          files: |
            build/libs/aithana_server.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}